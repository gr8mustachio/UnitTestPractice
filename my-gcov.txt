        -:    0:Source:Password.cpp
        -:    0:Graph:Password.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    1:#include "Password.h"
        -:    2:#include <string>
        -:    3:#include <iostream>
        -:    4:
        -:    5:using namespace std;
        -:    6:using std::string;
        -:    7:
function _ZN8PasswordC2Ev called 0 returned 0% blocks executed 0%
    #####:    8:Password::Password() {
call    0 never executed
    #####:    9:	set("ChicoCA-95929");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
    #####:   10:}
call    0 never executed
        -:   11:/*
        -:   12:  The function receives a string counts how many times the same character 
        -:   13:  occurs at the beginning of the string, before any other characters (or the
        -:   14:  end of the string). The function is case-sensitive so 'Z' is different than
        -:   15:  'z' and any ASCII characters are allowed.
        -:   16:*/
function _ZN8Password24count_leading_charactersENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   17:int Password::count_leading_characters(string phrase){
    #####:   18:  int repetition = 1;
    #####:   19:  int index = 0;
        -:   20:
    #####:   21:  while( index < phrase.length()-1 && phrase[index] == phrase[index+1] ){
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
    #####:   22:    repetition++;
    #####:   23:    index++;
        -:   24:  }
    #####:   25:  return repetition;
        -:   26:}
function _ZN8Password14has_mixed_caseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   27:bool Password::has_mixed_case(string pass){
    #####:   28:  bool lower = false;
    #####:   29:  bool upper = false;
    #####:   30:  for(int i = 0; i < pass.size(); i++){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   31:    if( pass[i] >= 'A' && pass[i] <= 'Z' ){
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
    #####:   32:      upper = true;
        -:   33:    }
    #####:   34:    else if( pass[i] < 'z'){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   35:      lower = true;
        -:   36:    }
        -:   37:  }
    #####:   38:  return upper && lower;
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   39:}
        -:   40:
function _ZN8Password3setENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   41:void Password::set(string pass) {
    #####:   42:	int minLen = 8;
    #####:   43:	if(pass.length() < 8)
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   44:		cout <<"Error" <<  endl;
call    0 never executed
call    1 never executed
    #####:   45:		return;
        -:   46:	if(has_mixed_case(pass) == false)
        -:   47:		cout << "Error" << endl;
        -:   48:		return;
        -:   49:	for(int i=0; i<pass_history.size(); i++) {
        -:   50:		if(pass_history[i] == pass)
        -:   51:			cout << "Error" << endl;
        -:   52:			return;
        -:   53:	}
        -:   54:	cout << "Password set successfully" << endl;
        -:   55:	return;
        -:   56:}
        -:   57:
function _ZN8Password12authenticateENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   58:bool Password::authenticate(string pass) {
    #####:   59:	if(pass == pass_history[pass_history.size()-1])
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:   60:		return true;
        -:   61:	else
    #####:   62:		return false;
        -:   63:}
        -:   64:
